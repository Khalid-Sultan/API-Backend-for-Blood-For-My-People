// <auto-generated />
using System;
using BloodDonation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BloodDonation.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BloodDonation.Models.DonationHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("amount");

                    b.Property<string>("date");

                    b.Property<int?>("donorId");

                    b.Property<int?>("recepientId");

                    b.HasKey("id");

                    b.HasIndex("donorId");

                    b.HasIndex("recepientId");

                    b.ToTable("donationHistories");
                });

            modelBuilder.Entity("BloodDonation.Models.Donor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dateOfBirth");

                    b.Property<string>("fullName");

                    b.Property<string>("phoneNumber");

                    b.Property<int?>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("donors");
                });

            modelBuilder.Entity("BloodDonation.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<string>("full_name");

                    b.Property<string>("name");

                    b.Property<int>("stargazers_count");

                    b.Property<string>("user_login");

                    b.Property<string>("user_url");

                    b.HasKey("id");

                    b.ToTable("items");
                });

            modelBuilder.Entity("BloodDonation.Models.Recepient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("location");

                    b.Property<string>("name");

                    b.Property<string>("phoneNumber");

                    b.Property<int?>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("recepients");
                });

            modelBuilder.Entity("BloodDonation.Models.Report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bloodType");

                    b.Property<int?>("donationHistoryId");

                    b.HasKey("id");

                    b.HasIndex("donationHistoryId");

                    b.ToTable("reports");
                });

            modelBuilder.Entity("BloodDonation.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email");

                    b.Property<string>("password");

                    b.Property<string>("role");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("BloodDonation.Models.DonationHistory", b =>
                {
                    b.HasOne("BloodDonation.Models.Donor", "donor")
                        .WithMany("DonationHistories")
                        .HasForeignKey("donorId");

                    b.HasOne("BloodDonation.Models.Recepient", "recepient")
                        .WithMany()
                        .HasForeignKey("recepientId");
                });

            modelBuilder.Entity("BloodDonation.Models.Donor", b =>
                {
                    b.HasOne("BloodDonation.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("BloodDonation.Models.Recepient", b =>
                {
                    b.HasOne("BloodDonation.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("BloodDonation.Models.Report", b =>
                {
                    b.HasOne("BloodDonation.Models.DonationHistory", "donationHistory")
                        .WithMany()
                        .HasForeignKey("donationHistoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
